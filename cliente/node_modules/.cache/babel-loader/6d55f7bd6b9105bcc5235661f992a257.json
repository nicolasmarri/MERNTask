{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmarri/Desktop/Mern-Task/cliente/src/components/proyectos/NuevoProyecto.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NuevoProyecto = () => {\n  _s();\n\n  //Obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorFormulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; //State para Proyecto\n\n  const [proyecto, guardarProyecto] = useState({\n    nombre: ''\n  }); //Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; //Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; //Cuando el usuario envía un proyecto\n\n\n  const onsubmitProyecto = e => {\n    e.preventDefault(); //Validar el proyecto\n\n    if (nombre === '') {\n      mostrarError();\n      return;\n    } //Agregar al State\n\n\n    agregarProyecto(proyecto); //Reiniciar el form\n\n    guardarProyecto({\n      nombre: ''\n    });\n  }; //Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-block btn-primario\",\n      onClick: onClickFormulario,\n      children: \"Nuevo Proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), formulario ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulario-nuevo-proyecto\",\n      onSubmit: onsubmitProyecto,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-text\",\n        placeholder: \"Nombre Proyecto\",\n        name: \"nombre\",\n        value: nombre,\n        onChange: onChangeProyecto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primario btn-block\",\n        value: \"Agregar Proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this) : null, errorFormulario ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El Nombre del proyecto es Oblgatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 32\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NuevoProyecto, \"kBj8T2HHTjM+7EaGo1N264zy45M=\");\n\n_c = NuevoProyecto;\nexport default NuevoProyecto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProyecto\");","map":{"version":3,"sources":["/Users/nicolasmarri/Desktop/Mern-Task/cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useContext","useState","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","nombre","onChangeProyecto","e","target","name","value","onsubmitProyecto","preventDefault","onClickFormulario"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,UAAxB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB;AACA,QAAMC,gBAAgB,GAAGJ,UAAU,CAACE,eAAD,CAAnC;AACA,QAAM;AAACG,IAAAA,UAAD;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA,iBAA9B;AAAiDC,IAAAA,eAAjD;AAAkEC,IAAAA;AAAlE,MAAkFL,gBAAxF,CAJwB,CAMxB;;AACA,QAAM,CAACM,QAAD,EAAWC,eAAX,IAA8BV,QAAQ,CAAC;AACzCW,IAAAA,MAAM,EAAC;AADkC,GAAD,CAA5C,CAPwB,CAaxB;;AACA,QAAM;AAACA,IAAAA;AAAD,MAAWF,QAAjB,CAdwB,CAgBxB;;AACA,QAAMG,gBAAgB,GAAGC,CAAC,IAAG;AACzBH,IAAAA,eAAe,CAAC,EACZ,GAAGD,QADS;AAEhB,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAFT,KAAD,CAAf;AAIH,GALD,CAjBwB,CAwBxB;;;AACA,QAAMC,gBAAgB,GAAGJ,CAAC,IAAG;AACzBA,IAAAA,CAAC,CAACK,cAAF,GADyB,CAGzB;;AACA,QAAGP,MAAM,KAAK,EAAd,EAAkB;AACdH,MAAAA,YAAY;AACZ;AACH,KAPwB,CASzB;;;AACAD,IAAAA,eAAe,CAACE,QAAD,CAAf,CAVyB,CAYzB;;AACAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,MAAM,EAAE;AADI,KAAD,CAAf;AAGH,GAhBD,CAzBwB,CA2CxB;;;AACA,QAAMQ,iBAAiB,GAAG,MAAK;AAC3Bb,IAAAA,iBAAiB;AACpB,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,4BAFd;AAGI,MAAA,OAAO,EAAEa,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOMf,UAAU,gBAEA;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,QAAQ,EAAEa,gBAFd;AAAA,8BAIA;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,WAAW,EAAC,iBAHhB;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,KAAK,EAAEN,MALX;AAMI,QAAA,QAAQ,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,cAJA,eAaA;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,4BAFd;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,GAqBA,IA5BhB,EA6BKP,eAAe,gBAAG;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2E,IA7B/F;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAjFD;;GAAMH,a;;KAAAA,a;AAmFN,eAAeA,aAAf","sourcesContent":["import React,{Fragment, useContext, useState} from 'react'\nimport proyectoContext from '../../context/proyectos/proyectoContext'\n\nconst NuevoProyecto = () => {\n\n    //Obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext)\n    const {formulario, errorFormulario, mostrarFormulario, agregarProyecto, mostrarError} = proyectosContext \n\n    //State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre:''\n    })\n\n    \n\n    //Extraer nombre de proyecto\n    const {nombre} = proyecto;\n    \n    //Lee los contenidos del input\n    const onChangeProyecto = e =>{\n        guardarProyecto({\n            ...proyecto,\n        [e.target.name]:e.target.value\n        })\n    }\n\n    //Cuando el usuario envía un proyecto\n    const onsubmitProyecto = e =>{\n        e.preventDefault()\n\n        //Validar el proyecto\n        if(nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        //Agregar al State\n        agregarProyecto(proyecto)\n\n        //Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    }\n\n    //Mostrar el formulario\n    const onClickFormulario = () =>{\n        mostrarFormulario()\n    }\n\n    return (\n        <Fragment>\n            <button\n                type='button'\n                className='btn btn-block btn-primario'\n                onClick={onClickFormulario}\n            >Nuevo Proyecto</button>\n\n            { formulario ?\n                    (\n                        <form\n                            className='formulario-nuevo-proyecto'\n                            onSubmit={onsubmitProyecto}\n                        >   \n                        <input\n                            type='text'\n                            className='input-text'\n                            placeholder='Nombre Proyecto'\n                            name='nombre'\n                            value={nombre}\n                            onChange={onChangeProyecto}\n                        />\n        \n                        <input \n                            type='submit'\n                            className='btn btn-primario btn-block'\n                            value='Agregar Proyecto'\n                        />\n                        </form>        \n                    ) : null }\n            {errorFormulario ? <p className='mensaje error'>El Nombre del proyecto es Oblgatorio</p> : null}\n        </Fragment>\n    )\n}\n\nexport default NuevoProyecto\n"]},"metadata":{},"sourceType":"module"}