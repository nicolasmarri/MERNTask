{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmarri/Desktop/MERNTask-master/cliente/src/context/proyectos/proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport uuid, { v4 as uuidv4 } from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda Virtual'\n  }, {\n    id: 2,\n    nombre: 'Intranet'\n  }, {\n    id: 3,\n    nombre: 'Diseño de Sitio Web'\n  }, {\n    id: 4,\n    nombre: 'MERN'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario: false,\n    proyecto: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //Serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //Agregar nuevo proyecto\n\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuidv4(); //Agregamos al proyecto en el State con el dispatch\n\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      payload: proyecto\n    });\n  }; //Valida el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Selecciona el proyecto que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Elimina un proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorFormulario: state.errorFormulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/Users/nicolasmarri/Desktop/MERNTask-master/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","uuid","v4","uuidv4","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorFormulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport uuid, {v4 as uuidv4} from 'uuid'\nimport proyectoContext from './proyectoContext'\nimport proyectoReducer from './proyectoReducer'\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types'\n\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        { id:1, nombre:'Tienda Virtual'},\n        { id:2, nombre:'Intranet'},\n        { id:3, nombre: 'Diseño de Sitio Web'},\n        { id:4, nombre: 'MERN' }\n    ]\n    \n\n    const initialState = {\n        proyectos : [],\n        formulario: false,\n        errorFormulario:false,\n        proyecto:null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer,initialState)\n\n    //Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //Obtener los proyectos\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    //Agregar nuevo proyecto\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuidv4()\n\n        //Agregamos al proyecto en el State con el dispatch\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: proyecto\n        })\n    }\n\n    //Valida el formulario por errores\n    const mostrarError = () =>{\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type:PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    //Elimina un proyecto\n    const eliminarProyecto = proyectoId => {\n        dispatch({\n            type: ELIMINAR_PROYECTO,\n            payload: proyectoId\n        })\n    }\n    return(\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorFormulario: state.errorFormulario,\n                proyecto: state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto, \n                mostrarError,\n                proyectoActual, \n                eliminarProyecto\n            }}\n        >\n            \n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState"]},"metadata":{},"sourceType":"module"}