{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmarri/Desktop/Mern-Task/cliente/src/components/tareas/FormTarea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormTarea = () => {\n  _s();\n\n  //Extraer si un proyecto esta activo \n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext; //Obtener la función del context de tarea\n\n  const tareasContext = useContext(tareaContext);\n  const {\n    tareaseleccionada,\n    errorTarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    limpiarTarea\n  } = tareasContext; //Effect que detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaseleccionada]); //State del formulario\n\n  const [tarea, guardarTarea] = useState({\n    nombre: ''\n  }); //Extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; //Si no hay proyecto seleccionado\n\n  if (!proyecto) return null; //Array destructuring para extraer el proyecto actual\n\n  const [proyectoActual] = proyecto; //Leer los valores del formulario \n\n  const handleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //Validar\n\n    if (nombre.trim() === '') {\n      validarTarea();\n      return;\n    } //Si es edicion o si es nueva tarea\n\n\n    if (tareaseleccionada === null) {\n      //Agregar la nueva tarea al state de tareas\n      tarea.proyectoId = proyectoActual.id;\n      tarea.estado = false;\n      agregarTarea(tarea);\n    } else {\n      //Actualizar tarea existente\n      actualizarTarea(tarea); //Elimina tarea seleccionada del state\n\n      limpiarTarea();\n    } //Obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); //Reiniciar el form\n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-text\",\n          placeholder: \"Nombre Tarea...\",\n          name: \"nombre\",\n          value: nombre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primario btn-submit btn-block\",\n          value: tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), errorTarea ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El nombre de la tarea es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormTarea, \"/yeU15ZI1Z/yGHEFBtrSLu6kYFo=\");\n\n_c = FormTarea;\nexport default FormTarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTarea\");","map":{"version":3,"sources":["/Users/nicolasmarri/Desktop/Mern-Task/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errorTarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","proyectoId","id","estado"],"mappings":"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","sourcesContent":["import React,{useContext, useState, useEffect} from 'react'\nimport proyectoContext from '../../context/proyectos/proyectoContext'\nimport tareaContext from '../../context/tareas/tareaContext'\n\nconst FormTarea = () => {\n\n    //Extraer si un proyecto esta activo \n    const proyectosContext = useContext(proyectoContext)\n    const {proyecto} = proyectosContext\n\n    //Obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext)\n    const {tareaseleccionada,errorTarea, agregarTarea, validarTarea, obtenerTareas,\n    actualizarTarea, limpiarTarea} = tareasContext\n\n    //Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada!== null){\n            guardarTarea(tareaseleccionada)\n        }else{\n            guardarTarea({\n                nombre:''\n            })\n        }\n    }, [tareaseleccionada]);\n\n    \n    //State del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre:''\n    })\n\n    //Extraer el nombre del proyecto\n    const {nombre} = tarea\n\n    //Si no hay proyecto seleccionado\n    if(!proyecto) return null\n\n    //Array destructuring para extraer el proyecto actual\n    const [proyectoActual] = proyecto\n\n    //Leer los valores del formulario \n    const handleChange = e =>{\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //Validar\n        if(nombre.trim() === ''){\n            validarTarea();\n            return\n        }\n\n        //Si es edicion o si es nueva tarea\n        if(tareaseleccionada === null){\n            //Agregar la nueva tarea al state de tareas\n            tarea.proyectoId = proyectoActual.id\n            tarea.estado = false\n            agregarTarea(tarea)\n        }else{\n            //Actualizar tarea existente\n            actualizarTarea(tarea);\n\n            //Elimina tarea seleccionada del state\n            limpiarTarea()\n        }\n\n        //Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id)\n\n        //Reiniciar el form\n        guardarTarea({\n            nombre:''\n        })\n\n    }\n\n    return (\n        <div className='formulario'>\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className='contenedor-input'>\n                    <input\n                        type='text'\n                        className='input-text'\n                        placeholder='Nombre Tarea...'\n                        name='nombre'\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='contenedor-input'>\n                    <input\n                        type='submit'\n                        className='btn btn-primario btn-submit btn-block'\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n            {errorTarea ? <p className='mensaje error'>El nombre de la tarea es obligatorio</p> : null}\n        </div>\n    )\n}\n\nexport default FormTarea\n"]},"metadata":{},"sourceType":"module"}