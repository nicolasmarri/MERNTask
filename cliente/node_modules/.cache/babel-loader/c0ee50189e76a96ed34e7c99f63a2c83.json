{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmarri/Desktop/MERNTask-master/cliente/src/context/tareas/tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport uuid, { v4 as uuidv4 } from 'uuid';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      id: 1,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 2,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 3,\n      nombre: 'Elegir Plataforma de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 4,\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 5,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 6,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 7,\n      nombre: 'Elegir Plataforma de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 8,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 9,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 1\n    }, {\n      id: 10,\n      nombre: 'Elegir Plataforma de Pago',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 11,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 3\n    }, {\n      id: 12,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 4\n    }, {\n      id: 13,\n      nombre: 'Elegir Plataforma de Pago',\n      estado: false,\n      proyectoId: 3\n    }],\n    tareasproyecto: null,\n    errorTarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //Crear las funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    tarea.id = uuidv4();\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; //Valida y muestra un error en caso de ser necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar tarea por ID\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; //Cambia el estado de cada tarea\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; //Extrae una tarea para edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //Edita o modifica una tarea\n\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  }; //Elimina la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errorTarea: state.errorTarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/Users/nicolasmarri/Desktop/MERNTask-master/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","uuid","v4","uuidv4","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareas","id","nombre","estado","proyectoId","tareasproyecto","errorTarea","tareaseleccionada","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","cambiarEstadoTarea","guardarTareaActual","actualizarTarea","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport TareaContext from './tareaContext'\nimport TareaReducer from './tareaReducer'\nimport uuid, {v4 as uuidv4} from 'uuid'\n\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    ESTADO_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n\n} from '../../types';\n\nconst TareaState = props => {\n    const initialState = {\n        tareas: [\n            {id:1,nombre: 'Elegir Plataforma', estado: true, proyectoId: 1},\n            {id:2,nombre: 'Elegir Colores', estado: false, proyectoId: 2},\n            {id:3,nombre: 'Elegir Plataforma de Pago', estado: false, proyectoId: 3},\n            {id:4,nombre: 'Elegir Hosting', estado: true, proyectoId: 4},\n            {id:5,nombre: 'Elegir Plataforma', estado: true, proyectoId: 1},\n            {id:6,nombre: 'Elegir Colores', estado: false, proyectoId: 2},\n            {id:7,nombre: 'Elegir Plataforma de Pago', estado: false, proyectoId: 3},\n            {id:8,nombre: 'Elegir Plataforma', estado: true, proyectoId: 4},\n            {id:9,nombre: 'Elegir Colores', estado: false, proyectoId: 1},\n            {id:10,nombre: 'Elegir Plataforma de Pago', estado: false, proyectoId: 2},\n            {id:11,nombre: 'Elegir Plataforma', estado: true, proyectoId: 3},\n            {id:12,nombre: 'Elegir Colores', estado: false, proyectoId: 4},\n            {id:13,nombre: 'Elegir Plataforma de Pago', estado: false, proyectoId: 3}\n        ],\n        tareasproyecto: null,\n        errorTarea: false,\n        tareaseleccionada: null\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState)\n\n    //Crear las funciones\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = proyectoId => {\n        dispatch({\n            type: TAREAS_PROYECTO,\n            payload: proyectoId\n        })\n    }\n\n    //Agregar una tarea al proyecto seleccionado\n    const agregarTarea = tarea => {\n        tarea.id = uuidv4()\n        dispatch({\n            type: AGREGAR_TAREA,\n            payload: tarea\n        })\n    }\n\n    //Valida y muestra un error en caso de ser necesario\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n\n        })\n    }\n\n    //Eliminar tarea por ID\n    const eliminarTarea = id =>{\n        dispatch({\n            type: ELIMINAR_TAREA,\n            payload: id\n        })\n    }\n\n    //Cambia el estado de cada tarea\n    const cambiarEstadoTarea = tarea =>{\n        dispatch({\n            type: ESTADO_TAREA,\n            payload: tarea\n        })\n    }\n\n    //Extrae una tarea para edicion\n    const guardarTareaActual = tarea =>{\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    //Edita o modifica una tarea\n    const actualizarTarea = tarea => {\n        dispatch({\n            type: ACTUALIZAR_TAREA,\n            payload: tarea\n        })\n    }\n\n    //Elimina la tarea seleccionada\n    const limpiarTarea = () =>{\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareas:state.tareas,\n                tareasproyecto: state.tareasproyecto,\n                errorTarea: state.errorTarea,\n                tareaseleccionada:state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                cambiarEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState"]},"metadata":{},"sourceType":"module"}